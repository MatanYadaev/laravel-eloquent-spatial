name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Pest - PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - DB ${{ matrix.db }} ${{ matrix.dependency-version }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [ 8.3, 8.2, 8.1 ]
        laravel: [ 10.* ]
        db: [ 'postgis/postgis:16-3.4', 'mysql:8.0', 'mysql:5.7', 'mariadb:10.9' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
        include:
          - laravel: 10.*
            testbench: ^8.0

    services:
      db:
        image: ${{ matrix.db }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel_eloquent_spatial_test
          POSTGRES_DB: laravel_eloquent_spatial_test
          POSTGRES_USER: root
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - ${{ contains(matrix.db, 'postgis') && '3306:5432' || '3306' }}
        options: >-
          ${{ (contains(matrix.db, 'postgis') && '--health-cmd="pg_isready"') || '--health-cmd="mysqladmin ping"' }}
          --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Execute tests
        env:
          DB_PORT: ${{ job.services.db.ports['3306'] }}
          DB_CONNECTION: ${{ contains(matrix.db, 'postgis') && 'pgsql' || 'mysql' }}
        run: vendor/bin/pest
